plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Habitat Quality in\n Settlement Area") +
guides(fill="none")
# Habitat quality in settlement
g12 <-ggplot(dataq, aes(x=clumpiness))+
geom_point(aes(y=meanQ, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=clumpiness,y=meanQ,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Habitat Quality in\n Settlement Area") +
guides(fill="none")
# Distance Total Moved
g13 <-ggplot(data, aes(x=clumpiness))+
#geom_point(aes(y=total_dist, colour=factor(behaviour)), shape = 1,alpha=0.1)+
geom_smooth(aes(x=clumpiness,y=total_dist,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Total Distance Moved") +
guides(fill="none")
g12
# Distance Total Moved
g13 <-ggplot(datadt, aes(x=clumpiness))+
geom_point(aes(y=meandt, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=clumpiness,y=meandt,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Total Distance Moved") +
guides(fill="none")
g13
# Euclidian distance
g14 <-ggplot(datadl, aes(x=clumpiness))+
geom_point(aes(y=meandl, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=clumpiness,y=meandl,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Euclidian Distance Moved") +
guides(fill="none")
g14
#Energetic Condition on Settlement
g15  <-ggplot(dataen, aes(x=clumpiness))+
geom_point(aes(y=meanen, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=clumpiness,y=meanen,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="bottom",legend.key = element_rect(fill = "transparent")) +
labs(x="Clumpiness (%)", y="Mean Energetic Condition \non Settlement",colour = "Plasticity Level") +
guides(fill="none")
g15
#-------------------------------------------------------------------------------
# EXPORT FIGURE
#------------------------------------------------------------------------------
png(file="Desktop/clumpiness_mean.png",width=1500, height=2000,res = 150)
plot_grid(g11,g12,g13,g14,g15,
labels = c('(A)','(B)','(C)','(D)','(E)'),
label_size = 12,ncol = 1)
dev.off()
#-------------------------------------------------------------------------------
# PLOT BY LANDSCAPE
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# Habitat Amount
#-------------------------------------------------------------------------------
# Settlement rate
g6<-ggplot(set_table, aes(x=habitat_amount))+
geom_point(aes(y=rate, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=habitat_amount, y=rate,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_text(size=10,face="bold"), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(title = "Decision to settle by:",x="", y="Settlement Rate") +
guides(fill="none")
g6
#-------------------------------------------------------------------------------
# PLOT BY LANDSCAPE
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# Habitat Amount
#-------------------------------------------------------------------------------
# Settlement rate
g6<-ggplot(set_table, aes(x=habitat_amount))+
geom_point(aes(y=rate, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=habitat_amount, y=rate,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_text(size=10,face="bold"), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(
#title = "Decision to settle by:",
x="", y="Settlement Rate") +
guides(fill="none")
g6
# Habitat quality in settlement
g7 <-ggplot(dataq, aes(x=habitat_amount))+
geom_point(aes(y=meanQ, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=habitat_amount,y=meanQ,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Habitat Quality in \nSettlement Area") +
guides(fill="none")
g7
g1 <- ggplot(set_table, aes(x=behaviour, y=rate, group=behaviour,colour=factor(behaviour))) +
geom_boxplot() +
#facet_grid(~decision,labeller = labeller(decision=lab))+
geom_jitter(shape=1,size = 1,position=position_jitter(0.2),alpha=0.5) +
scale_colour_brewer(palette = "Paired") +
theme(strip.text = element_text(size=10,face="bold"), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10)) +
labs(
#title = "Decision to settle by:",
x="", y = "Settlement Rate") +
guides(colour="none")
g1
g2 <- ggplot(dataq, aes(x=behaviour, y=meanQ, group=behaviour,colour=factor(behaviour))) +
geom_boxplot() +
#facet_grid(~decision,labeller = labeller(decision=lab))+
geom_jitter(shape=1,size = 1,position=position_jitter(0.2),alpha=0.5) +
scale_colour_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10)) +
scale_y_continuous(limits = c(0,0.8)) +
labs(x="", y = "Mean Habitat Quality of \n Settlement Area") +
guides(colour="none")
g2
g3 <- ggplot(datadt, aes(x=behaviour, y=meandt, group=behaviour,colour=factor(behaviour))) +
geom_boxplot() +
#  facet_grid(~decision,labeller = labeller(decision=lab))+
geom_jitter(shape=1,size = 1,position=position_jitter(0.2),alpha=0.5) +
scale_colour_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10)) +
# scale_y_continuous(limits = c(0,0.8)) +
labs(x="", y = "Mean Total Distance Moved") +
guides(colour="none")
g3
g4 <- ggplot(datadl, aes(x=behaviour, y=meandl, group=behaviour,colour=factor(behaviour))) +
geom_boxplot() +
#  facet_grid(~decision,labeller = labeller(decision=lab))+
geom_jitter(shape=1,size = 1,position=position_jitter(0.2),alpha=0.5) +
scale_colour_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10)) +
# scale_y_continuous(limits = c(0,0.8)) +
labs(x="Plasticity Level", y = "Mean Euclidian Distance Moved") +
guides(colour="none")
g4
g5 <- ggplot(dataen, aes(x=behaviour, y=meanen, group=behaviour,colour=factor(behaviour))) +
geom_boxplot() +
#  facet_grid(~decision,labeller = labeller(decision=lab))+
geom_jitter(shape=1,size = 1,position=position_jitter(0.2),alpha=0.5) +
scale_colour_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10)) +
# scale_y_continuous(limits = c(0,0.8)) +
labs(x="Plasticity Level", y = "Mean Energetic Condition \non Settlement") +
guides(colour="none")
g5
#-------------------------------------------------------------------------------
# EXPORT FIGURE
#-------------------------------------------------------------------------------
png(file="Desktop/general_mean_all.png",width=1500, height=2000,res = 150)
plot_grid(g1,g2,g3,g4,g5,
labels = c('(A)','(B)','(C)','(D)','(E)'),
label_size = 12,ncol = 1)
dev.off()
#-------------------------------------------------------------------------------
# PLOT BY LANDSCAPE
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# Habitat Amount
#-------------------------------------------------------------------------------
# Settlement rate
g6<-ggplot(set_table, aes(x=habitat_amount))+
geom_point(aes(y=rate, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=habitat_amount, y=rate,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_text(size=10,face="bold"), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(
#title = "Decision to settle by:",
x="", y="Settlement Rate") +
guides(fill="none")
g6
# Habitat quality in settlement
g7 <-ggplot(dataq, aes(x=habitat_amount))+
geom_point(aes(y=meanQ, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=habitat_amount,y=meanQ,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Habitat Quality in \nSettlement Area") +
guides(fill="none")
g7
# Distance Total Moved
g8 <-ggplot(datadt, aes(x=habitat_amount))+
geom_point(aes(y=meandt, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=habitat_amount,y=meandt,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Total Distance Moved") +
guides(fill="none")
g8
# Euclidian distance
g9 <-ggplot(datadl, aes(x=habitat_amount))+
geom_point(aes(y=meandl, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=habitat_amount,y=meandl,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Euclidian Distance Moved") +
guides(fill="none")
g9
#Energetic Condition on Settlement
g10  <-ggplot(dataen, aes(x=habitat_amount))+
geom_point(aes(y=meanen, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=habitat_amount,y=meanen,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="bottom",legend.key = element_rect(fill = "transparent")) +
labs(x="Habitat Amount (%)", y="Energetic Condition\n on Settlement",colour = "Plasticity Level") +
guides(fill="none")
g10
#-------------------------------------------------------------------------------
# EXPORT FIGURE
#------------------------------------------------------------------------------
png(file="Desktop/habitat_amount_mean_all.png",width=1500, height=2000,res = 150)
plot_grid(g6,g7,g8,g9,g10,
labels = c('(A)','(B)','(C)','(D)','(E)'),
label_size = 12,ncol = 1)
dev.off()
#-------------------------------------------------------------------------------
# Fragmentation - Clumpiness
#-------------------------------------------------------------------------------
# Settlement rate
g11 <-ggplot(set_table, aes(x=clumpiness))+
geom_point(aes(y=rate, colour=factor(behaviour)), shape = 1,alpha=0.3)+
geom_smooth(aes(x=clumpiness, y=rate,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_text(size=10,face="bold"), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(title = "Decision to settle by:",x="", y="Settlement Rate") +
guides(fill="none")
# Habitat quality in settlement
g12 <-ggplot(dataq, aes(x=clumpiness))+
geom_point(aes(y=meanQ, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=clumpiness,y=meanQ,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Habitat Quality in\n Settlement Area") +
guides(fill="none")
g11
# Habitat quality in settlement
g12 <-ggplot(dataq, aes(x=clumpiness))+
geom_point(aes(y=meanQ, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=clumpiness,y=meanQ,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Habitat Quality in\n Settlement Area") +
guides(fill="none")
g12
# Distance Total Moved
g13 <-ggplot(datadt, aes(x=clumpiness))+
geom_point(aes(y=meandt, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=clumpiness,y=meandt,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Total Distance Moved") +
guides(fill="none")
g13
# Euclidian distance
g14 <-ggplot(datadl, aes(x=clumpiness))+
geom_point(aes(y=meandl, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=clumpiness,y=meandl,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="none",legend.key = element_rect(fill = "transparent")) +
labs(x="", y="Mean Euclidian Distance Moved") +
guides(fill="none")
g14
#Energetic Condition on Settlement
g15  <-ggplot(dataen, aes(x=clumpiness))+
geom_point(aes(y=meanen, colour=factor(behaviour)), shape = 1,alpha=0.5)+
geom_smooth(aes(x=clumpiness,y=meanen,colour=factor(behaviour),fill=factor(behaviour)), method = "loess", se = F)+
#  facet_grid(~decision,labeller = labeller(decision=lab))+
scale_color_brewer(palette = "Paired") +
theme(strip.text = element_blank(), strip.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
axis.title.x = element_text(size = 10), axis.title.y = element_text(size = 10),
plot.title = element_text(size = 10,hjust = 0.5,face="bold"), legend.title=element_text(size=10),
legend.position="bottom",legend.key = element_rect(fill = "transparent")) +
labs(x="Clumpiness (%)", y="Mean Energetic Condition \non Settlement",colour = "Plasticity Level") +
guides(fill="none")
g15
#-------------------------------------------------------------------------------
# EXPORT FIGURE
#------------------------------------------------------------------------------
png(file="Desktop/clumpiness_mean_all.png",width=1500, height=2000,res = 150)
plot_grid(g11,g12,g13,g14,g15,
labels = c('(A)','(B)','(C)','(D)','(E)'),
label_size = 12,ncol = 1)
dev.off()
install.packages("rJava")
library(rJava)
library(RNetLogo)
library(ggplot2)
setwd("~/home/kekuntu/Documents/NetLogo_6.2.2/app")
nl.path <- getwd()
setwd("/home/kekuntu/Documents/NetLogo_6.2.2/app")
nl.path <- getwd()
NLStart(nl.path, gui=F)
test.java <- 1 # 1 = run java diagnostics
if(test.java==1){
# test 1
# test java is working
.jinit()
.jnew( "java/awt/Point", 10L, 10L )
f <- .jnew("java/awt/Frame","Hello")
.jcall(f,"setVisible",TRUE)
# test 2
component <- .jnull()
component <- .jcast(component, new.class = "java/awt/Component")
message <- .jnew("java/lang/String","This is a JOptionPane test from rJava.")
message <- .jcast(message, new.class = "java/lang/Object")
title <- .jnew("java/lang/String","Test")
type <- .jnew("java/lang/Integer", as.integer(2))
f <- .jnew("javax/swing/JOptionPane")
.jcall(f,"showMessageDialog", component, message, title, .jsimplify(type))
# test 3
.jcall("java/lang/System", "S", "getProperty", "java.vm.version")
.jcall("java/lang/System", "S", "getProperty", "java.vm.name")
.jcall("java/lang/System", "S", "getProperty", "java.vm.info")
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
.jcall("java/lang/System", "S", "getProperty", "sun.arch.data.model")
# test 4
.jcall("java/lang/System", "S", "getProperty", "java.awt.headless")
Sys.getenv("NOAWT")
}
test.java <- 1 # 1 = run java diagnostics
if(test.java==1){
# test 1
# test java is working
.jinit()
.jnew( "java/awt/Point", 10L, 10L )
f <- .jnew("java/awt/Frame","Hello")
.jcall(f,"setVisible",TRUE)
# test 2
component <- .jnull()
component <- .jcast(component, new.class = "java/awt/Component")
message <- .jnew("java/lang/String","This is a JOptionPane test from rJava.")
message <- .jcast(message, new.class = "java/lang/Object")
title <- .jnew("java/lang/String","Test")
type <- .jnew("java/lang/Integer", as.integer(2))
f <- .jnew("javax/swing/JOptionPane")
.jcall(f,"showMessageDialog", component, message, title, .jsimplify(type))
# test 3
.jcall("java/lang/System", "S", "getProperty", "java.vm.version")
.jcall("java/lang/System", "S", "getProperty", "java.vm.name")
.jcall("java/lang/System", "S", "getProperty", "java.vm.info")
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
.jcall("java/lang/System", "S", "getProperty", "sun.arch.data.model")
# test 4
.jcall("java/lang/System", "S", "getProperty", "java.awt.headless")
Sys.getenv("NOAWT")
}
NLStart(nl.path,gui = F,nl.jarname = "netlogo-6.2.2.jar")
install.packages('JGR',,'http://www.rforge.net/')
library(JGR)
JGR::JGR()# open JGR
NLStart(nl.path, gui=F)
remove.packages(rJava)
detach("package:rJava", unload = TRUE)
remove.packages("rJava", lib="~/R/x86_64-pc-linux-gnu-library/4.1")
install.packages("rJava",dependencies = TRUE, type = "source")
install.packages("rJava", dependencies = TRUE, type = "source")
library(rJava)
setwd("/home/kekuntu/Documents/NetLogo_6.2.2/app")
nl.path <- getwd()
NLStart(nl.path, gui=F)
library(rJava)
library(RNetLogo)
library(ggplot2)
setwd("/home/kekuntu/Documents/NetLogo_6.2.2/app")
nl.path <- getwd()
NLStart(nl.path, gui=F)
NLStart(nl.path,gui = F,nl.jarname = "netlogo-6.2.2.jar")
Sys.setenv(JAVA_HOME = "/usr/lib/jvm/java-8-openjdk-amd64/")
library(rJava)
library(RNetLogo)
library(ggplot2)
setwd("~/home/kekuntu/Documents/NetLogo_6.2.2/app")
nl.path <- getwd()
NLStart(nl.path, gui=F)
library(rJava)
library(RNetLogo)
library(ggplot2)
setwd("~/home/kekuntu/Documents/NetLogo_6.2.2/app")
nl.path <- getwd()
NLStart(nl.path, gui=F)
